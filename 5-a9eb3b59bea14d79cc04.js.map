{"version":3,"sources":["webpack:///./node_modules/bs-custom-file-input/dist/bs-custom-file-input.js"],"names":["module","exports","Selector","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","i","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","handleInputChange","this","inputValue","hasAttribute","files","map","file","name","join","value","indexOf","splittedValue","split","getSelectedFiles","handleFormReset","customFileList","querySelectorAll","filter","len","Event","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","_i","_len","destroy","form","undefined","removeEventListener","_i2","_len2","factory"],"mappings":"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","file":"5-a9eb3b59bea14d79cc04.js","sourcesContent":["/*!\n * bsCustomFileInput v1.3.4 (https://github.com/Johann-S/bs-custom-file-input)\n * Copyright 2018 - 2020 Johann-S <johann.servoire@gmail.com>\n * Licensed under MIT (https://github.com/Johann-S/bs-custom-file-input/blob/master/LICENSE)\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.bsCustomFileInput = factory());\n})(this, function () {\n  'use strict';\n\n  var Selector = {\n    CUSTOMFILE: '.custom-file input[type=\"file\"]',\n    CUSTOMFILELABEL: '.custom-file-label',\n    FORM: 'form',\n    INPUT: 'input'\n  };\n  var textNodeType = 3;\n\n  var getDefaultText = function getDefaultText(input) {\n    var defaultText = '';\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      defaultText = label.textContent;\n    }\n\n    return defaultText;\n  };\n\n  var findFirstChildNode = function findFirstChildNode(element) {\n    if (element.childNodes.length > 0) {\n      var childNodes = [].slice.call(element.childNodes);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var node = childNodes[i];\n\n        if (node.nodeType !== textNodeType) {\n          return node;\n        }\n      }\n    }\n\n    return element;\n  };\n\n  var restoreDefaultText = function restoreDefaultText(input) {\n    var defaultText = input.bsCustomFileInput.defaultText;\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      element.textContent = defaultText;\n    }\n  };\n\n  var fileApi = !!window.File;\n  var FAKE_PATH = 'fakepath';\n  var FAKE_PATH_SEPARATOR = '\\\\';\n\n  var getSelectedFiles = function getSelectedFiles(input) {\n    if (input.hasAttribute('multiple') && fileApi) {\n      return [].slice.call(input.files).map(function (file) {\n        return file.name;\n      }).join(', ');\n    }\n\n    if (input.value.indexOf(FAKE_PATH) !== -1) {\n      var splittedValue = input.value.split(FAKE_PATH_SEPARATOR);\n      return splittedValue[splittedValue.length - 1];\n    }\n\n    return input.value;\n  };\n\n  function handleInputChange() {\n    var label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      var inputValue = getSelectedFiles(this);\n\n      if (inputValue.length) {\n        element.textContent = inputValue;\n      } else {\n        restoreDefaultText(this);\n      }\n    }\n  }\n\n  function handleFormReset() {\n    var customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT)).filter(function (input) {\n      return !!input.bsCustomFileInput;\n    });\n\n    for (var i = 0, len = customFileList.length; i < len; i++) {\n      restoreDefaultText(customFileList[i]);\n    }\n  }\n\n  var customProperty = 'bsCustomFileInput';\n  var Event = {\n    FORMRESET: 'reset',\n    INPUTCHANGE: 'change'\n  };\n  var bsCustomFileInput = {\n    init: function init(inputSelector, formSelector) {\n      if (inputSelector === void 0) {\n        inputSelector = Selector.CUSTOMFILE;\n      }\n\n      if (formSelector === void 0) {\n        formSelector = Selector.FORM;\n      }\n\n      var customFileInputList = [].slice.call(document.querySelectorAll(inputSelector));\n      var formList = [].slice.call(document.querySelectorAll(formSelector));\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        Object.defineProperty(input, customProperty, {\n          value: {\n            defaultText: getDefaultText(input)\n          },\n          writable: true\n        });\n        handleInputChange.call(input);\n        input.addEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i = 0, _len = formList.length; _i < _len; _i++) {\n        formList[_i].addEventListener(Event.FORMRESET, handleFormReset);\n\n        Object.defineProperty(formList[_i], customProperty, {\n          value: true,\n          writable: true\n        });\n      }\n    },\n    destroy: function destroy() {\n      var formList = [].slice.call(document.querySelectorAll(Selector.FORM)).filter(function (form) {\n        return !!form.bsCustomFileInput;\n      });\n      var customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT)).filter(function (input) {\n        return !!input.bsCustomFileInput;\n      });\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        restoreDefaultText(input);\n        input[customProperty] = undefined;\n        input.removeEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i2 = 0, _len2 = formList.length; _i2 < _len2; _i2++) {\n        formList[_i2].removeEventListener(Event.FORMRESET, handleFormReset);\n\n        formList[_i2][customProperty] = undefined;\n      }\n    }\n  };\n  return bsCustomFileInput;\n});"],"sourceRoot":""}