{"version":3,"sources":["webpack:///./src/pages/apply.js"],"names":["setFileValidity","fileUpload","files","length","setCustomValidity","swal","size","value","ApplicationForm","_initFirebase","state","applicationFormConfig","initialApplicationData","loading","validated","sending","submitted","loadData","a","loadApplicationFormConfig","props","firebase","get","then","snapshot","data","catch","setState","loadUserApplication","application","context","uid","exists","Promise","all","componentDidMount","this","componentDidUpdate","prevProps","window","bsCustomFileInput","init","render","roles","hasOwnProperty","denyListed","upemember","provisionalMember","name","text","displayBack","settings","applicationsOpen","semester","onSubmit","event","preventDefault","form","currentTarget","fileUploads","Array","from","querySelectorAll","forEach","checkValidity","stopPropagation","inputs","radios","filter","r","checked","questions","applicant","responses","map","inputId","id","qUID","firstName","split","newName","email","find","q","order","type","radioResponses","inputValue","uploadFiles","resolve","reject","pop","file","put","ref","getDownloadURL","fileURLs","concat","uploadApplicationData","set","deliberation","accepted","confirmed","feedback","votes","interview","interviewed","updateUser","user","update","profileIMG","sendReceipt","sendApplicationReceipt","successMessage","title","route","flexdirection","style","justifyContent","noValidate","color","paddingTop","paddingBottom","sort","b","question","questionComponent","defaultValue","Control","required","as","rows","File","label","custom","accept","onChange","e","target","Check","inline","defaultChecked","Row","width","key","Group","controlId","Label","renderQuestion","paddingRight","paddingLeft","disabled","Component","contextType","AuthUserContext","compose","withSettings","withAuthorization","isLoggedIn","withFirebase"],"mappings":"sTA0BMA,EAAkB,SAACC,GACS,IAA5BA,EAAWC,MAAMC,QACnBF,EAAWG,kBAAkB,2BAC7BC,IAAK,SAAU,0BAA2B,UACjCJ,EAAWC,MAAMC,OAAS,GACnCF,EAAWG,kBAAkB,+BAC7BC,IAAK,SAAU,8BAA+B,UACrCJ,EAAWC,MAAM,GAAGI,KAAO,SACpCL,EAAWG,kBAAkB,yBAC7BH,EAAWM,MAAQ,GACnBF,IAAK,SAAU,wBAAyB,UAExCJ,EAAWG,kBAAkB,KAI3BI,E,oJACJC,eAAgB,E,EAChBC,MAAQ,CACNC,sBAAuB,KACvBC,uBAAwB,KACxBC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,WAAW,G,EAiBbC,S,sBAAW,8BAAAC,EAAA,sDACT,EAAKT,eAAgB,EACfU,EAA4B,EAAKC,MAAMC,SAC1CV,wBACAW,MACAC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,kBACL,EAAKC,SAAS,CACZd,SAAS,OAGTe,EAAsB,EAAKR,MAAMC,SACpCQ,YAAY,EAAKC,QAAQC,KACzBT,MACAC,MAAK,SAACC,GAAD,OAAeA,EAASQ,OAASR,EAASC,OAAS,QACxDC,OAAM,kBACL,EAAKC,SAAS,CACZd,SAAS,OAIfoB,QAAQC,IAAI,CAACf,EAA2BS,IAAsBL,MAC5D,gBAAEZ,EAAF,KAAyBC,EAAzB,YACE,EAAKe,SAAS,CACZd,SAAS,EACTF,wBACAC,8BA1BG,2C,8CAbXuB,kBAAA,WACMC,KAAKhB,MAAMC,WAAae,KAAK3B,eAAe2B,KAAKnB,Y,EAGvDoB,mBAAA,SAAmBC,GACbF,KAAKhB,MAAMC,WAAae,KAAK3B,eAAe2B,KAAKnB,WAC/B,oBAAXsB,QACT,qCAA+BhB,MAAK,SAACiB,GACnCA,EAAkBC,W,EAoCxBC,OAAA,WAAU,IAAD,OACP,EACEN,KAAK1B,MADCG,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,UAAWF,EAA5B,EAA4BA,UAAWH,EAAvC,EAAuCA,sBAAuBI,EAA9D,EAA8DA,QAG9D,GAAIF,EAAS,OAAO,kBAAC,IAAD,MAEpB,GACGuB,KAAKN,QAAQa,MAAMC,eAAe,eACjCR,KAAKN,QAAQa,MAAME,YACpBT,KAAKN,QAAQa,MAAMC,eAAe,cACjCR,KAAKN,QAAQa,MAAMG,WACpBV,KAAKN,QAAQa,MAAMC,eAAe,sBACjCR,KAAKN,QAAQa,MAAMI,kBAErB,OACE,oCACE,kBAAC,IAAD,CACEC,KAAM,mBACNC,KACE,4LAEFC,aAAa,KAKrB,IAAKd,KAAKhB,MAAM+B,SAASC,iBACvB,OACE,kBAAC,IAAD,CACEJ,KAAM,mBACNC,KAAI,0CAA4CtC,EAAsB0C,SAAlE,gIACJH,aAAa,IAInB,IAAMI,EAAQ,uCAAG,WAAOC,GAAP,qDAAArC,EAAA,yDACfqC,EAAMC,iBACD,EAAKpC,MAAM+B,SAASC,iBAFV,uBAGb/C,IACE,SACA,kIACA,SANW,6BAWToD,EAAOF,EAAMG,eACbC,EAAcC,MAAMC,KACxBJ,EAAKK,iBAAiB,wBAEZC,SAAQ,SAAC9D,GAAD,OAAgBD,EAAgBC,OAEvB,IAAzBwD,EAAKO,gBAjBM,iBAkBbT,EAAMU,kBAlBO,+BAoBb,EAAKtC,SAAS,CAAEZ,SAAS,IACnBmD,EAASN,MAAMC,KAAKJ,EAAKK,iBAAiB,kBAC1CK,EAASP,MAAMC,KACnBJ,EAAKK,iBAAiB,wCACtBM,QAAO,SAACC,GAAD,OAAOA,EAAEC,WAxBL,EAyBmB,EAAK5D,MAAMC,sBAAnC0C,EAzBK,EAyBLA,SAAUkB,EAzBL,EAyBKA,UAzBL,EA0BU,EAAKzC,QAApBC,EA1BK,EA0BLA,KAAKY,EA1BA,EA0BAA,OACP6B,WAAY,EAGdC,EAAYP,EAAOQ,KAAI,YAA6B,IAAtBC,EAAqB,EAAzBC,GAAarE,EAAY,EAAZA,MACnCsE,EAAOF,EAEA,SAATE,GACFC,EAAYvE,EAAMwE,MAAM,KAAK,GAC7BC,EAAUzE,GACQ,UAATsE,IAAkBI,EAAQ1E,GAErC,MAA8BgE,EAAUW,MAAK,SAACC,GAAD,OAAOA,EAAEpD,MAAQ8C,KAAtD7B,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KACrB,MAAO,CACLtD,IAAK8C,EACLtE,QACAyC,OACAoC,QACAC,WAIEC,EAAiBnB,EAAOO,KAC5B,YAA2C,IAAlCC,EAAiC,EAAvC3B,KAAsBuC,EAAiB,EAAxBhF,MACVsE,EAAOF,EAEPpE,EAAsB,QAAdgF,EACd,EAA8BhB,EAAUW,MAAK,SAACC,GAAD,OAAOA,EAAEpD,MAAQ8C,KAAtD7B,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KACrB,MAAO,CACLtD,IAAK8C,EACLtE,QACAyC,OACAoC,QACAC,WAKAG,EAAc7B,EAAYe,KAC9B,SAACzE,GAAD,OACE,IAAIgC,SAAQ,SAACwD,EAASC,GACpB,IAAMb,EAAO5E,EAAW2E,GAAGG,MAAM,KAAKY,MACtC,EAAKvE,MAAMC,SACRuE,KAAK7D,EAAK8C,GACVgB,IAAI5F,EAAWC,MAAM,IACrBqB,MAAK,SAACC,GAAD,OAAcA,EAASsE,IAAIC,oBAChCxE,MAAK,SAAChB,GACL,MAA8BgE,EAAUW,MACtC,SAACC,GAAD,OAAOA,EAAEpD,MAAQ8C,KADX7B,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAGrB,OAAOI,EAAQ,CACb1D,IAAK8C,EACLtE,QACAyC,OACAoC,QACAC,kBAjFC,UAuFUpD,QAAQC,IAAIsD,GAvFtB,eAuFPQ,EAvFO,OAwFbvB,EAAYA,EAAUwB,OAAOD,GAAUC,OAAOX,GAExCY,EAAwB,EAAK9E,MAAMC,SAASQ,YAAYE,GAAKoE,IAAI,CACrE1B,YACApB,WACA+C,aAAc,CACZC,UAAU,EACVC,WAAW,EACXC,SAAU,GACVC,MAAO,IAETC,UAAW,CACTC,aAAa,KAGXC,EAAa,EAAKvF,MAAMC,SAASuF,KAAK7E,GAAK8E,OAAO,CACtDlE,QACAK,KAAMgC,EACN8B,WAAY,KAERC,EAAc,EAAK3F,MAAMC,SAAS2F,uBAAuB,CAC7D/B,QACAH,cA9GW,UAiHP7C,QAAQC,IAAI,CAACgE,EAAuBS,EAAYI,IAjHzC,QAkHb,EAAKpF,SAAS,CAAEX,WAAW,EAAMD,SAAS,IAlH7B,QAqHf,EAAKY,SAAS,CACZb,WAAW,IAtHE,4CAAH,sDA0HRmG,EACJ,kBAAC,IAAD,CACEjE,KAAM,mBACNC,KACE,4UAEFC,aAAa,IAIjB,GAAIlC,EAAW,OAAOiG,EAsFtB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAM,QAAQC,MAAM,WACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,mDAEF,kBAAC,IAAD,CAAWC,cAAc,MAAMC,MAAO,CAAEC,eAAgB,WACtD,kBAAC,IAAD,CAAcC,YAAU,EAACzG,UAAWA,EAAWwC,SAAUA,GACtDlB,KAAKN,QAAQa,MAAMC,eAAe,cACjCR,KAAKN,QAAQa,MAAM6B,WACjB,uBACE6C,MAAO,CACLG,MAAO,MACPC,WAAY,OACZC,cAAe,SAJnB,gIAaH/G,EAAsB4D,UACpBoD,MAAK,SAACzG,EAAG0G,GAAJ,OAAW1G,EAAEkE,MAAQwC,EAAExC,MAAQ,GAAK,KACzCV,KAAI,SAACmD,GAAD,OA9GQ,SAACA,GACtB,IASIC,EATIlH,EAA2B,EAAKF,MAAhCE,uBACJmH,EAAe,GASnB,OAR+B,OAA3BnH,EACFmH,EAAenH,EAAuB6D,UAAUS,MAC9C,SAACb,GAAD,OAAOA,EAAEtC,MAAQ8F,EAAS9F,OAC1BxB,MACwB,SAAjBsH,EAAS9F,IAAgBgG,EAAe,EAAKjG,QAAQkB,KACtC,UAAjB6E,EAAS9F,MAAiBgG,EAAe,EAAKjG,QAAQmD,OAGvD4C,EAASxC,MACf,IAAK,WACHyC,EACE,kBAAC,IAAKE,QAAN,CACEC,SAAUJ,EAASI,SACnBC,GAAG,WACHC,KAAK,IACLJ,aAAcA,IAGlB,MACF,IAAK,OACHD,EACE,kBAAC,IAAKM,KAAN,CACExD,GAAE,eAAiBiD,EAAS9F,IAC5BsG,MAAM,cACNC,QAAM,EACNC,OAAO,OACPC,SAAU,SAACC,GAAD,OAAOzI,EAAgByI,EAAEC,WAGvC,MACF,IAAK,QACHZ,EACE,6BACE,kBAAC,IAAKa,MAAN,CACEL,QAAM,EACNL,SAAUJ,EAASI,SACnBW,QAAM,EACNC,eAAgBd,EAChBxH,MAAM,OACN8H,MAAM,MACNhD,KAAK,QACLrC,KAAM6E,EAAS9F,IACf6C,GAAOiD,EAAS9F,IAAd,OAEJ,kBAAC,IAAK4G,MAAN,CACEL,QAAM,EACNL,SAAUJ,EAASI,SACnBW,QAAM,EACNC,gBAAiBd,EACjBxH,MAAM,QACN8H,MAAM,KACNhD,KAAK,QACLrC,KAAM6E,EAAS9F,IACf6C,GAAOiD,EAAS9F,IAAd,QAIR,MACF,QACE+F,EACE,kBAAC,IAAKE,QAAN,CACEC,SAAUJ,EAASI,SACnB5C,KAAMwC,EAASxC,KACf0C,aAAcA,IAMtB,OACE,kBAAC,IAAKe,IAAN,CAAUzB,MAAO,CAAE0B,MAAO,QAAUC,IAAKnB,EAAS9F,KAChD,kBAAC,IAAKkH,MAAN,CAAYC,UAAWrB,EAAS9F,IAAKsF,MAAO,CAAE0B,MAAO,SACnD,kBAAC,IAAKI,MAAN,KACGtB,EAAS7E,KADZ,IACmB6E,EAASI,UAAY,kBAAC,IAAD,OAEvCH,IAgCoBsB,CAAevB,MAEpC,kBAAC,IAAD,CACEwB,aAAc,MACdC,YAAa,MACb7B,WAAY,KACZC,cAAe,KACfrC,KAAK,SACLkE,SAAUxI,GAETA,EAAU,gBAAkB,c,GAzVbyI,aAAxBhJ,EAUGiJ,YAAcC,kBAwVRC,sBACbC,IACAC,4BAAkBC,KAClBC,eAHaJ,CAIbnJ","file":"component---src-pages-apply-js-7b3d9286c68e4daffad1.js","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport swal from \"@sweetalert/with-react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport {\n  AuthUserContext,\n  withFirebase,\n  withAuthorization,\n} from \"upe-react-components\";\n\nimport { withSettings } from \"../components/API/SettingsContext\";\n\nimport { isLoggedIn } from \"../util/conditions\";\nimport Loader from \"../components/Loader\";\nimport TextDisplay, { BackIcon } from \"../components/TextDisplay\";\nimport SEO from \"../components/SEO\";\nimport {\n  Container,\n  RequiredAsterisk,\n  Title,\n  CenteredForm,\n  StyledButton,\n} from \"../styles/global\";\n\nconst setFileValidity = (fileUpload) => {\n  if (fileUpload.files.length === 0) {\n    fileUpload.setCustomValidity(\"You must upload a file!\");\n    swal(\"Uh oh!\", \"You must upload a file!\", \"error\");\n  } else if (fileUpload.files.length > 1) {\n    fileUpload.setCustomValidity(\"You can only upload 1 file!\");\n    swal(\"Uh oh!\", \"You can only upload 1 file!\", \"error\");\n  } else if (fileUpload.files[0].size > 1048576) {\n    fileUpload.setCustomValidity(\"Max file size is 1MB!\");\n    fileUpload.value = \"\";\n    swal(\"Uh oh!\", \"Max file size is 1MB!\", \"error\");\n  } else {\n    fileUpload.setCustomValidity(\"\");\n  }\n};\n\nclass ApplicationForm extends Component {\n  _initFirebase = false;\n  state = {\n    applicationFormConfig: null,\n    initialApplicationData: null,\n    loading: true,\n    validated: false,\n    sending: false,\n    submitted: false,\n  };\n  static contextType = AuthUserContext;\n\n  componentDidMount() {\n    if (this.props.firebase && !this._initFirebase) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.firebase && !this._initFirebase) this.loadData();\n    if (typeof window !== \"undefined\") {\n      import(\"bs-custom-file-input\").then((bsCustomFileInput) => {\n        bsCustomFileInput.init();\n      });\n    }\n  }\n\n  loadData = async () => {\n    this._initFirebase = true;\n    const loadApplicationFormConfig = this.props.firebase\n      .applicationFormConfig()\n      .get()\n      .then((snapshot) => snapshot.data())\n      .catch(() =>\n        this.setState({\n          loading: false,\n        })\n      );\n    const loadUserApplication = this.props.firebase\n      .application(this.context.uid)\n      .get()\n      .then((snapshot) => (snapshot.exists ? snapshot.data() : null))\n      .catch(() =>\n        this.setState({\n          loading: false,\n        })\n      );\n\n    Promise.all([loadApplicationFormConfig, loadUserApplication]).then(\n      ([applicationFormConfig, initialApplicationData]) =>\n        this.setState({\n          loading: false,\n          applicationFormConfig,\n          initialApplicationData,\n        })\n    );\n  };\n\n  render() {\n    const { loading, submitted, validated, applicationFormConfig, sending } =\n      this.state;\n\n    if (loading) return <Loader />;\n\n    if (\n      (this.context.roles.hasOwnProperty(\"denyListed\") &&\n        this.context.roles.denyListed) ||\n      (this.context.roles.hasOwnProperty(\"upemember\") &&\n        this.context.roles.upemember) ||\n      (this.context.roles.hasOwnProperty(\"provisionalMember\") &&\n        this.context.roles.provisionalMember)\n    )\n      return (\n        <>\n          <TextDisplay\n            name={\"Your Application\"}\n            text={\n              \"Unfortunately you are not eligible to apply to Upsilon PI Epsilon. If you think this is a mistake, or want further information on the situation, please contact our EBoard at upe@bu.edu.\"\n            }\n            displayBack={true}\n          />\n        </>\n      );\n\n    if (!this.props.settings.applicationsOpen)\n      return (\n        <TextDisplay\n          name={\"Your Application\"}\n          text={`Unfortunately, the application for the ${applicationFormConfig.semester} season has closed. If you're interesting in joining BU UPE, please come back next semester and apply, we'd love to have you!`}\n          displayBack={true}\n        />\n      );\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if (!this.props.settings.applicationsOpen) {\n        swal(\n          \"Uh oh!\",\n          \"Applications are closed! Not sure how you got here, but unfortunately we can't submit this for you as applications have closed.\",\n          \"error\"\n        );\n        return;\n      }\n\n      const form = event.currentTarget;\n      const fileUploads = Array.from(\n        form.querySelectorAll(\".custom-file-input\")\n      );\n      fileUploads.forEach((fileUpload) => setFileValidity(fileUpload));\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.setState({ sending: true });\n        const inputs = Array.from(form.querySelectorAll(\".form-control\"));\n        const radios = Array.from(\n          form.querySelectorAll(\".custom-radio>.custom-control-input\")\n        ).filter((r) => r.checked);\n        const { semester, questions } = this.state.applicationFormConfig;\n        const { uid, roles } = this.context;\n        roles.applicant = true;\n\n        let firstName, email, newName;\n        let responses = inputs.map(({ id: inputId, value }) => {\n          const qUID = inputId;\n\n          if (qUID === \"name\") {\n            firstName = value.split(\" \")[0];\n            newName = value;\n          } else if (qUID === \"email\") email = value;\n\n          const { name, order, type } = questions.find((q) => q.uid === qUID);\n          return {\n            uid: qUID,\n            value,\n            name,\n            order,\n            type,\n          };\n        });\n\n        const radioResponses = radios.map(\n          ({ name: inputId, value: inputValue }) => {\n            const qUID = inputId;\n            // eslint-disable-next-line eqeqeq\n            const value = inputValue == \"true\";\n            const { name, order, type } = questions.find((q) => q.uid === qUID);\n            return {\n              uid: qUID,\n              value,\n              name,\n              order,\n              type,\n            };\n          }\n        );\n\n        const uploadFiles = fileUploads.map(\n          (fileUpload) =>\n            new Promise((resolve, reject) => {\n              const qUID = fileUpload.id.split(\"-\").pop();\n              this.props.firebase\n                .file(uid, qUID)\n                .put(fileUpload.files[0])\n                .then((snapshot) => snapshot.ref.getDownloadURL())\n                .then((value) => {\n                  const { name, order, type } = questions.find(\n                    (q) => q.uid === qUID\n                  );\n                  return resolve({\n                    uid: qUID,\n                    value,\n                    name,\n                    order,\n                    type,\n                  });\n                });\n            })\n        );\n\n        const fileURLs = await Promise.all(uploadFiles);\n        responses = responses.concat(fileURLs).concat(radioResponses);\n\n        const uploadApplicationData = this.props.firebase.application(uid).set({\n          responses,\n          semester,\n          deliberation: {\n            accepted: false,\n            confirmed: false,\n            feedback: \"\",\n            votes: {},\n          },\n          interview: {\n            interviewed: false,\n          },\n        });\n        const updateUser = this.props.firebase.user(uid).update({\n          roles,\n          name: newName,\n          profileIMG: \"\",\n        });\n        const sendReceipt = this.props.firebase.sendApplicationReceipt({\n          email,\n          firstName,\n        });\n\n        await Promise.all([uploadApplicationData, updateUser, sendReceipt]);\n        this.setState({ submitted: true, sending: false });\n      }\n\n      this.setState({\n        validated: true,\n      });\n    };\n\n    const successMessage = (\n      <TextDisplay\n        name={\"Your Application\"}\n        text={\n          \"Your application has been submitted! Thank you for applying to join BU UPE. Please check your email for a confirmation of your submission. Further details, such as interview timeslots, will be prompted via email and can be entered in this application. If you'd like to edit your submission, simply refresh this page and re-apply.\"\n        }\n        displayBack={true}\n      />\n    );\n\n    if (submitted) return successMessage;\n\n    const renderQuestion = (question) => {\n      const { initialApplicationData } = this.state;\n      let defaultValue = \"\";\n      if (initialApplicationData !== null) {\n        defaultValue = initialApplicationData.responses.find(\n          (r) => r.uid === question.uid\n        ).value;\n      } else if (question.uid === \"name\") defaultValue = this.context.name;\n      else if (question.uid === \"email\") defaultValue = this.context.email;\n\n      let questionComponent;\n      switch (question.type) {\n        case \"textarea\":\n          questionComponent = (\n            <Form.Control\n              required={question.required}\n              as=\"textarea\"\n              rows=\"3\"\n              defaultValue={defaultValue}\n            />\n          );\n          break;\n        case \"file\":\n          questionComponent = (\n            <Form.File\n              id={`custom-file-${question.uid}`}\n              label=\"Upload file\"\n              custom\n              accept=\".pdf\"\n              onChange={(e) => setFileValidity(e.target)}\n            />\n          );\n          break;\n        case \"yesno\":\n          questionComponent = (\n            <div>\n              <Form.Check\n                custom\n                required={question.required}\n                inline\n                defaultChecked={defaultValue}\n                value=\"true\"\n                label=\"Yes\"\n                type=\"radio\"\n                name={question.uid}\n                id={`${question.uid}-1`}\n              />\n              <Form.Check\n                custom\n                required={question.required}\n                inline\n                defaultChecked={!defaultValue}\n                value=\"false\"\n                label=\"No\"\n                type=\"radio\"\n                name={question.uid}\n                id={`${question.uid}-2`}\n              />\n            </div>\n          );\n          break;\n        default:\n          questionComponent = (\n            <Form.Control\n              required={question.required}\n              type={question.type}\n              defaultValue={defaultValue}\n            />\n          );\n          break;\n      }\n\n      return (\n        <Form.Row style={{ width: \"100%\" }} key={question.uid}>\n          <Form.Group controlId={question.uid} style={{ width: \"100%\" }}>\n            <Form.Label>\n              {question.name} {question.required && <RequiredAsterisk />}\n            </Form.Label>\n            {questionComponent}\n          </Form.Group>\n        </Form.Row>\n      );\n    };\n\n    return (\n      <>\n        <SEO title=\"Apply\" route=\"/apply\" />\n        <BackIcon />\n        <Title>\n          <h1> Your Application </h1>\n        </Title>\n        <Container flexdirection=\"row\" style={{ justifyContent: \"center\" }}>\n          <CenteredForm noValidate validated={validated} onSubmit={onSubmit}>\n            {this.context.roles.hasOwnProperty(\"applicant\") &&\n              this.context.roles.applicant && (\n                <p\n                  style={{\n                    color: \"red\",\n                    paddingTop: \"10px\",\n                    paddingBottom: \"10px\",\n                  }}\n                >\n                  Look's like you've already applied! Feel free to reapply\n                  however, just note that it will overwrite your previous\n                  submission.\n                </p>\n              )}\n\n            {applicationFormConfig.questions\n              .sort((a, b) => (a.order > b.order ? 1 : -1))\n              .map((question) => renderQuestion(question))}\n\n            <StyledButton\n              paddingRight={\"10%\"}\n              paddingLeft={\"10%\"}\n              paddingTop={\"2%\"}\n              paddingBottom={\"2%\"}\n              type=\"submit\"\n              disabled={sending}\n            >\n              {sending ? \"Submitting...\" : \"Submit\"}\n            </StyledButton>\n          </CenteredForm>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  withSettings,\n  withAuthorization(isLoggedIn),\n  withFirebase\n)(ApplicationForm);\n"],"sourceRoot":""}